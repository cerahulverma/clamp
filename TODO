Done
=========
Generate custom Java classes for Python classes with a clamped __init__
Set the name of the generated proxy class for Class.forName
Assume python class name for non-specified proxy class name
Allow checked exceptions to be specified
Allow overloaded method signatures with lists of class types in position
Generate additional method signatures for default arguments in function
Ant task to compile all proxies
If the clamped class extends a Java class and has a clamped __init__, have the generated class extend the Java class

Before 0.1
==========
Version Jython proxy files
Check for illegal Java method names, illegal subclassing
jarjar with same asm settings as Jython

After 0.1
=========
Set method visibility
Handle array arguments
Expose Java fields with something like the property builtin
Generate a named interface for Python classes with clamped methods
Java annotations for methods, method arguments, fields
Generate Java source for the bytecode to expose docs to Java
Add type checking to internal Python calls to clamped methods so the Python can assume it
Make easy to use from guice, spring, hadoop
